{"version":3,"file":"static/js/660.28883964.chunk.js","mappings":"wKACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,+B,mBCUxN,EAPmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAS,IAAMD,EAAEE,OAAOC,UAC7CL,EAAAA,EAAAA,KAACM,EAAAA,GAAO,CAACC,GAAIT,EAAKO,SAAER,EAAMW,QAElC,ECCA,EANgB,SAACX,GACb,OACIG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEC,OAAOE,SAAER,EAAMY,SAEzC,E,gDCHMC,GAAcC,EAAAA,EAAAA,GAAiB,IAkBrC,GAAeC,EAAAA,EAAAA,GAAW,CAACC,KAAM,2BAAjC,EAhBuB,SAAChB,GACpB,OACIiB,EAAAA,EAAAA,MAAA,QAAMC,SAAUlB,EAAMmB,aAAaX,SAAA,EAC/BL,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAACiB,EAAAA,EAAK,CAACC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,GACrBF,KAAK,iBACLc,YAAY,qCAEvBtB,EAAAA,EAAAA,KAAA,OAAAK,UACIL,EAAAA,EAAAA,KAAA,UAAAK,SAAQ,qBAIxB,ICiBA,EA7BgB,SAACR,GAEb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAxB,GAAM,OAAIH,EAAAA,EAAAA,KAAC4B,EAAU,CAACpB,KAAML,EAAOK,KAAsBT,GAAII,EAAOJ,IAAtBI,EAAOJ,GAAqB,IAC7G8B,EAAmBN,EAAMO,SAASH,KAAI,SAAAlB,GAAO,OAAIT,EAAAA,EAAAA,KAAC+B,EAAO,CAACtB,QAASA,EAAQA,SAAcA,EAAQV,GAAM,IACtFwB,EAAMS,eAM3B,OAAKnC,EAAMoC,QAGPnB,EAAAA,EAAAA,MAAA,OAAKb,UAAWC,EAAEwB,QAAQrB,SAAA,EACtBL,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAEgC,aAAa7B,SAC1BoB,KAELzB,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAE4B,SAASzB,UACvBL,EAAAA,EAAAA,KAAA,OAAAK,SAAMwB,OAGV7B,EAAAA,EAAAA,KAACmC,EAAc,CAACpB,SAfJ,SAACqB,GACjBvC,EAAMwC,YAAYD,EAAOJ,eAC7B,QAE0BhC,EAAAA,EAAAA,KAACsC,EAAAA,GAAQ,CAAC/B,GAAI,UAc5C,E,oBCZA,GAAegC,E,QAAAA,KACXC,EAAAA,EAAAA,KAhBkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,YAG3B,IAEyB,SAACiB,GACtB,MAAO,CACHJ,YAAa,SAACL,GACVS,GAASC,EAAAA,EAAAA,GAAmBV,GAChC,EAER,IAIIW,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"messageBlock\":\"Dialogs_messageBlock__vj+4K\"};","import React from \"react\";\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return <div className={s.dialog + ' ' + s.active}>\n        <NavLink to={path}>{props.name}</NavLink>\n    </div>\n}\n\nexport default DialogItem;","import React from \"react\";\nimport s from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Message = (props) => {\n    return (\n        <div className={s.dialog}>{props.message}</div>\n    )\n}\n\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Field, reduxForm} from \"redux-form\";\nimport React from \"react\";\nimport {Textarea} from \"../../common/FormControl/FormControl\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       name='newMessageBody'\n                       placeholder='Enter your message, please :)'/>\n            </div>\n            <div>\n                <button>Send message</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm ({form: 'dialog-add-message-form'})(AddMessageForm)","import React from \"react\";\nimport s from './Dialogs.module.css';\nimport DialogItem from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message.jsx\";\nimport {Navigate} from \"react-router-dom\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let dialogsElement = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />);\n    let messagesElements = state.messages.map(message => <Message message={message.message} key={message.id} />);\n    let newMessageBody = state.newMessageBody;\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n\n    if (!props.isAuth) return <Navigate to={'/login'} />;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElement}\n            </div>\n            <div className={s.messages}>\n                <div>{messagesElements}</div>\n\n            </div>\n            <AddMessageForm onSubmit={addNewMessage} />\n        </div>\n    )\n}\n\n\nexport default Dialogs;","import React from \"react\";\nimport {sendMessageCreator} from \"../Redux/Dialog-Reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Navigate} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n        /*isAuth: state.auth.isAuth*/\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);\n\n"],"names":["props","path","id","_jsx","className","s","dialog","active","children","NavLink","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","state","dialogsPage","dialogsElement","dialogs","map","DialogItem","messagesElements","messages","Message","newMessageBody","isAuth","dialogsItems","AddMessageForm","values","sendMessage","Navigate","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}